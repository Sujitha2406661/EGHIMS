@model IEnumerable<Health_Insurance.Models.Policy>
@* Ensure the model namespace is correct *@

@{
    ViewData["Title"] = "Available Policies for Enrollment";
}

<div class="dashboard-header">
    <h1>@ViewData["Title"]</h1>
</div>

<div class="dashboard-card">
    <div class="dashboard-card-header">
        <h2 class="dashboard-card-title">Policy Enrollment Options</h2>
    </div>
    <div class="dashboard-card-body">

       
        <div class="details-summary-card mb-4">
            
            @if (ViewBag.IsEmployee != null && ViewBag.IsEmployee)
            {
                <h4>Your Employee Profile</h4>
                <hr />
                <p class="mb-0"><strong>Employee:</strong> @ViewBag.LoggedInEmployeeName</p>
                <input type="hidden" id="selectedEmployeeId" value="@ViewBag.LoggedInEmployeeId" />
                <small class="text-muted">You will be automatically enrolled when you click 'Enroll'.</small>
            }
            else
            {
                <h4>Select Employees for Enrollment</h4>
                <hr />
                <div class="form-group">
                    <label for="employeeMultiSelect" class="control-label mb-2">Select One or More Employees:</label> 
                    <select id="employeeMultiSelect" name="employeeIds" class="form-control" multiple size="3" asp-items="ViewBag.EmployeeList" required>
                        <option value="" disabled selected>-- Select Employee(s) --</option>
                    </select>
                    <small class="form-text text-muted mt-2 d-block">Hold <strong>Ctrl</strong> (Windows) or <strong>Cmd</strong> (Mac) to select multiple employees.</small>
                </div>
            }
        </div>

        @* Message display area for AJAX responses *@
            <div id="enrollmentMessages" class="mt-3 mb-4">
                <!-- Success or error messages from AJAX enrollments will appear here -->
            </div>

            <h3 class="dashboard-card-title mt-4 mb-3">Available Policies</h3> 

        @if (Model != null && Model.Any())
        {
            <div class="table-responsive"> 
                <table class="table table-hover dashboard-table"> 
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.First().PolicyName)</th>
                            <th>@Html.DisplayNameFor(model => model.First().CoverageAmount)</th>
                            <th>@Html.DisplayNameFor(model => model.First().PremiumAmount)</th>
                            <th>@Html.DisplayNameFor(model => model.First().PolicyType)</th>
                            <th class="text-center">Actions</th> 
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var policy in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => policy.PolicyName)</td>
                                <td>@Html.DisplayFor(modelItem => policy.CoverageAmount)</td>
                                <td>@Html.DisplayFor(modelItem => policy.PremiumAmount)</td>
                                <td>@Html.DisplayFor(modelItem => policy.PolicyType)</td>
                                <td class="text-center"> 
                                    @* Button to trigger JS AJAX for enrollment *@
            <button type="button" class="btn btn-success dashboard-btn-primary btn-sm enroll-btn">
                <i class="fas fa-plus-circle"></i> Enroll
            </button>
            </td>
            </tr>
            }
            </tbody>
            </table>
        </div>
        }
        else
        {
        <div class="alert alert-info" role="alert">
            No policies available for enrollment at this time.
        </div>
        }
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            var isEmployeeView = @(ViewBag.IsEmployee != null && ViewBag.IsEmployee ? "true" : "false");
            var messagesContainer = $('#enrollmentMessages');

            // Clear messages when an employee selection changes (for Admin/HR view)
            $('#employeeMultiSelect').on('change', function() {
                messagesContainer.empty();
            });

            // Handle Enroll button clicks
            $('.enroll-btn').on('click', function () {
                var policyId = $(this).data('policy-id');
                var employeeIds = [];
                messagesContainer.empty(); // Clear previous messages

                if (isEmployeeView) {
                    var employeeId = $('#selectedEmployeeId').val();
                    if (!employeeId || employeeId === '0') {
                        messagesContainer.append('<div class="alert alert-danger">Your employee ID could not be determined. Please log in again.</div>');
                        return;
                    }
                    employeeIds.push(employeeId);
                } else {
                    employeeIds = $('#employeeMultiSelect').val(); // Gets an array of selected values

                    if (!employeeIds || employeeIds.length === 0) {
                        messagesContainer.append('<div class="alert alert-danger">Please select at least one employee.</div>');
                        return;
                    }
                }

                var postData = {
                    policyId: policyId,
                    employeeIds: employeeIds
                };

                $.ajax({
                    url: '@Url.Action("Enroll", "Enrollment")',
                    type: 'POST',
                    data: postData,
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response && response.messages && response.messages.length > 0) {
                            response.messages.forEach(function(msg) {
                                messagesContainer.append('<div class="alert ' + (response.success ? 'alert-success' : 'alert-warning') + '">' + msg + '</div>');
                            });
                        } else if (response.success) {
                            messagesContainer.append('<div class="alert alert-success">Enrollment successful.</div>');
                        } else {
                            messagesContainer.append('<div class="alert alert-danger">An unknown error occurred during enrollment.</div>');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX error: ", status, error, xhr.responseText);
                        let errorMessage = 'Error processing enrollment. Please try again.';
                        try {
                            const errorResponse = JSON.parse(xhr.responseText);
                            if (xhr.status === 403) {
                                errorMessage = "You do not have permission to enroll for these selections.";
                            } else if (errorResponse && errorResponse.title) {
                                errorMessage = errorResponse.title;
                            }
                        } catch (e) { /* not JSON */ }
                        messagesContainer.append('<div class="alert alert-danger">' + errorMessage + '</div>');
                    }
                });
            });
        });
    </script>
}
