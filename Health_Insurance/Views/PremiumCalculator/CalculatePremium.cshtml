@using Health_Insurance.Models;

@{
    ViewData["Title"] = "Calculate Premium";
}

<div class="dashboard-header">
    <h1>@ViewData["Title"]</h1>
</div>

<div class="dashboard-card">
    <div class="dashboard-card-header">
        <h2 class="dashboard-card-title">Enter Details for Premium Calculation</h2>
    </div>
    <div class="dashboard-card-body">
        <p class="mb-4">Enter Employee and Policy details to calculate the premium.</p>

        <div class="row">
            <div class="col-md-6">
                <form id="premiumCalculationForm" asp-controller="PremiumCalculator" asp-action="CalculatePremium" method="post">
                    @Html.AntiForgeryToken()

                    <div class="form-group mb-3">
                        <label for="employeeId" class="control-label">Employee ID:</label>
                        <input type="number" id="employeeId" name="employeeId" class="form-control" required />
                    </div>
                    <div class="form-group mb-4">
                        <label for="policyId" class="control-label">Policy ID:</label>
                        <input type="number" id="policyId" name="policyId" class="form-control" required />
                    </div>
                    <div class="form-group button-group-spacing">
                        <button type="submit" class="btn btn-primary dashboard-btn-primary">
                            <i class="fas fa-calculator"></i> Calculate Premium
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <div id="premiumResult" class="alert mt-3" style="display: none;">
            <strong>Calculated Premium:</strong> <span id="calculatedPremiumAmount"></span>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            var premiumForm = $('#premiumCalculationForm');
            var premiumResultDiv = $('#premiumResult');
            var calculatedPremiumSpan = $('#calculatedPremiumAmount');

            premiumForm.submit(function (event) {
                event.preventDefault();

                var employeeId = $('#employeeId').val();
                var policyId = $('#policyId').val();

                if (!employeeId || !policyId) {
                    premiumResultDiv.removeClass('alert-success').addClass('alert-danger').html('<strong>Error:</strong> Please enter both Employee ID and Policy ID.').show();
                    return;
                }

                premiumResultDiv.hide().removeClass('alert-success alert-danger').text('');
                calculatedPremiumSpan.text('');

                $.ajax({
                    url: premiumForm.attr('action'),
                    type: premiumForm.attr('method'),
                    data: { employeeId: employeeId, policyId: policyId },
                    headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                    success: function (response) {
                        if (response && response.premium !== undefined) {
                            calculatedPremiumSpan.text('$' + response.premium.toFixed(2));
                            premiumResultDiv.removeClass('alert-danger').addClass('alert-success').html('<strong>Calculated Premium:</strong> <span id="calculatedPremiumAmount"></span>').find('#calculatedPremiumAmount').text('$' + response.premium.toFixed(2)).end().show();
                        } else {
                            premiumResultDiv.removeClass('alert-success').addClass('alert-danger').html('<strong>Error:</strong> Could not calculate premium.').show();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("AJAX Error:", status, error, xhr.responseText);
                        let errorMessage = 'Error calculating premium. Please try again.';
                        try {
                            const errorResponse = JSON.parse(xhr.responseText);
                            if (errorResponse && errorResponse.title) {
                                errorMessage = errorResponse.title;
                            }
                        } catch (e) { }
                        premiumResultDiv.removeClass('alert-success').addClass('alert-danger').html('<strong>Error:</strong> ' + errorMessage).show();
                    }
                });
            });
        });
    </script>
}

<style>
    /* General body and dashboard container styles */
    body {
        background-color: #f4f7f6; /* Light gray background */
        font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif; /* Example font */
    }

    .dashboard-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        padding: 20px;
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

        .dashboard-header h1 {
            margin: 0;
            color: #343a40;
            font-size: 2em;
            font-weight: 600;
        }

    .dashboard-card {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        margin-bottom: 30px;
        overflow: hidden;
    }

    .dashboard-card-header {
        padding: 20px;
        border-bottom: 1px solid #e9ecef;
        background-color: #f8f9fa;
    }

    .dashboard-card-title {
        margin: 0;
        font-size: 1.5em;
        color: #343a40;
    }

    .dashboard-card-body {
        padding: 20px;
    }

    /* Form specific adjustments */
    .form-group label {
        font-weight: 500;
        color: #495057;
        margin-bottom: 5px;
    }

    .form-control {
        border-radius: 5px;
        border: 1px solid #ced4da;
        padding: 10px 15px;
    }

        .form-control:focus {
            border-color: #007bff; /* Standard Bootstrap primary blue for focus */
            box-shadow: 0 0 0 0.25rem rgba(0, 123, 255, 0.25);
        }

    /* Primary "Calculate Premium" button (using Bootstrap's primary blue) */
    .dashboard-btn-primary {
        background-color: #007bff; /* Bootstrap primary blue */
        border-color: #007bff;
        color: #fff;
        padding: 10px 20px; /* Larger padding for main action */
        font-size: 1em;
        border-radius: 5px;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

        .dashboard-btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .dashboard-btn-primary i {
            margin-right: 8px;
        }

    /* Spacing for buttons at the bottom of the form */
    .button-group-spacing {
        margin-top: 20px;
    }

    /* Bootstrap's default margin-bottom for form-group was mb-3, but adding it explicitly */
    .mb-3 {
        margin-bottom: 1rem !important; /* 16px */
    }

    .mb-4 {
        margin-bottom: 1.5rem !important; /* 24px */
    }
</style>
